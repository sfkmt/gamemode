name: Issue Handler

on:
  issues:
    types: [opened, labeled]
  issue_comment:
    types: [created]

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  handle-documentation-issues:
    runs-on: ubuntu-latest
    if: contains(github.event.issue.labels.*.name, 'documentation') || contains(github.event.issue.title, 'docs:')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Comment on issue
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸ‘‹ Thank you for your documentation suggestion! We are reviewing your request and will address it soon.'
            })

      - name: Add documentation label
        uses: actions/github-script@v7
        with:
          script: |
            const labels = await github.rest.issues.listLabelsOnIssue({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
            })
            
            if (!labels.data.some(label => label.name === 'documentation')) {
              await github.rest.issues.addLabels({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                labels: ['documentation']
              })
            }

  auto-close-completed:
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'issue_comment' && 
      (contains(github.event.comment.body, '/close') || 
       contains(github.event.comment.body, 'fixed') || 
       contains(github.event.comment.body, 'completed'))
    steps:
      - name: Close issue
        uses: actions/github-script@v7
        with:
          script: |
            const isCollaborator = await github.rest.repos.checkCollaborator({
              owner: context.repo.owner,
              repo: context.repo.repo,
              username: context.payload.comment.user.login
            }).then(() => true).catch(() => false)
            
            if (isCollaborator) {
              await github.rest.issues.update({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                state: 'closed'
              })
              
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: 'âœ… Issue closed as completed.'
              })
            }